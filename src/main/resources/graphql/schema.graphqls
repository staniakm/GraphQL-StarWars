enum Gender {
    UNKNOWN,
    MALE,
    FEMALE,
    HERMAPHRODITE
}
type Person {
    id: ID!
    name: String!
    gender: Gender
    species: Species
    personFilms(first:Int=10): [Film]
}

type Film {
    id: ID!
    title: String!
    "Film release date"
    releaseDate: String
    "Film director"
    director: String
    filmCharacters: [Person]
}

type Species {
    id:ID!
    name: String!
    language: String
}

type Query {
    # fetch all
    "Fetch all Star Wars characters"
    allPersons(page:Int=0, size:Int=3): [Person!]
    "Fetch all Star Wars universum movies"
    allFilms: [Film!]
    "Fetch all species from Star Wars universum"
    allSpecies: [Species!]

    # fetch by param
    "Find specific Star Wars character by its name"
    personByName(name:String!): Person
    "Fetch all movies where character with given name plays"
    filmsWithCharacter(characterName:String!): [Film!]
    "Find single species by its name or ID"
    speciesBy(id:ID, name:String=""):Species
}

input SpeciesInput {
    name: String!
    language: String
}

input FilmInput {
    title: String!
    releaseDate: String
    director: String
}

input PersonInput {
    name: String!
    gender: Gender
    speciesInput: SpeciesInput
}

type Mutation {
    addSpecies(name: String!, language: String) : Species

    addPerson(name: String!, gender: Gender, speciesName: String) : Person

#    updatePerson(name: String, persoInput: PersonInput) : Person
}

schema {
    query: Query
}
